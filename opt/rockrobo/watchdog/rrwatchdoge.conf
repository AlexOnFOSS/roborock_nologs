# rsyslog - system logging daemon
#
# rsyslog is an enhanced multi-threaded replacement for the traditional
# syslog daemon, logging messages from applications

description	"rrwatchdoge daemon"


start on filesystem
stop on runlevel [06]

respawn

kill timeout 320

normal exit 0 TERM

env RR_ROOT=/opt/rockrobo
env RR_UDATA=/mnt/data
env RR_DEFAULT=/mnt/default
env RR_RESERVE=/mnt/reserve

env WIFI_START_PATH=/opt/rockrobo/wlan
env WIFI_START_NAME=wifi_start.sh

env WIFI_CONF_PATH=/mnt/data/miio
env WIFI_CONF_NAME=wifi.conf

env WIFI_ENABLE_PATH=/mnt/data/wlan
env WIFI_ENABLE_NAME=wifi_enable.conf

env MIIO_RECV_LINE=miio_recv_line
env MIIO_SEND_LINE=miio_send_line

env NAV_CONFIG_PATH=/opt/rockrobo/cleaner/conf
env NAV_DYNAMIC_CONFIG_PATH=/mnt/data/rockrobo
env NAV_LOG_PATH=/mnt/data/rockrobo


# Directory for saving downloaded update package and related files
env UPDPKG_DIR=/mnt/data/.temp

# Full path for update info file
env UPDPKG_INFO_PATH=/mnt/data/.temp
env UPDPKG_INFO_NAME=Update.pkg.inf

# HWDOG reboot option
# 1 = REBOOT_SYSTEM     2 = ONLY_INTERRUPT
env HWDOG_OPTION=2

# crash detect, if robot did not crash after "CRASH_IGNORE_MIN" minutes, then clear the crash counter.
env CRASH_IGNORE_MIN=60

pre-start script
#    key_service
#    ip_server 2>/dev/null &
    mkdir -p $RR_UDATA/rockrobo/rrlog
    mkdir -p $RR_UDATA/rockrobo/map
    mkdir -p $RR_UDATA/wlan
    mkdir -p $RR_UDATA/miio
    ldconfig
#    iptables -I INPUT -j DROP -p tcp --dport 22
    iptables -I INPUT -j DROP -p tcp --dport 6665
    iptables -I INPUT -j DROP -p udp --dport 6665
    $RR_ROOT/scripts/provision.sh
    $RR_ROOT/scripts/pipes.sh
#   $RR_ROOT/scripts/cpu.sh ondemand
    ip6tables -P INPUT DROP
    ip6tables -P FORWARD DROP
    ip6tables -P OUTPUT DROP

    mountpoint -q $RR_UDATA/rockrobo/rrlog || mount -t tmpfs -o size=5m tmpfs $RR_UDATA/rockrobo/rrlog
    
    ln -s /dev/null $RR_UDATA/rockrobo/rrlog/watchdog.log
    ln -s /dev/null $RR_UDATA/rockrobo/rrlog/rrlog.log
    ln -s /dev/null $RR_UDATA/rockrobo/rrlog/miio.log

    rm /dev/shm/*.log
    rm /dev/shm/*.old

    if [ ! -f "/dev/shm/check" ]; then
        ln -s /dev/null /dev/shm/APP_PROXY_normal.log
        ln -s /dev/null /dev/shm/NAV_TRAP_normal.log
        ln -s /dev/null /dev/shm/NAV_binId5.log
        ln -s /dev/null /dev/shm/NAV_binId6.log
        ln -s /dev/null /dev/shm/PLAYER_SERVER_normal.log
        ln -s /dev/null /dev/shm/PLAYER_fprintf.log
        ln -s /dev/null /dev/shm/PLAYER_normal.log
        ln -s /dev/null /dev/shm/PLAYER_SERVER_fprintf.log
        ln -s /dev/null /dev/shm/SLAM_fprintf.log
        ln -s /dev/null /dev/shm/SLAM_normal.log
        echo . > /dev/shm/check
    fi


end script

script
	export RR_ROOT
	export RR_UDATA
	export RR_DEFAULT
	export RR_RESERVE
	export WIFI_START_PATH
	export WIFI_START_NAME
	export WIFI_CONF_PATH
	export WIFI_CONF_NAME
	export WIFI_ENABLE_PATH
	export WIFI_ENABLE_NAME
	export MIIO_RECV_LINE
	export MIIO_SEND_LINE
	export NAV_CONFIG_PATH
	export NAV_DYNAMIC_CONFIG_PATH
	export NAV_LOG_PATH
	export UPDPKG_DIR
	export UPDPKG_INFO_PATH
	export UPDPKG_INFO_NAME

	chdir $RR_ROOT
	PATH=$PATH:$RR_ROOT/rrlog:$RR_ROOT/cleaner/bin:$RR_ROOT/wlan:$RR_ROOT/watchdog:$RR_ROOT/miio:$RR_ROOT/firmware
#    sysctl -w kernel.softlockup_panic=1 &   
    ulimit -c unlimited
    echo '/mnt/data/rockrobo/rrlog/core.%t.%s.%e' > /proc/sys/kernel/core_pattern 
#    exec WatchDoge $RR_ROOT/watchdog >> $RR_UDATA/rockrobo/rrlog/watchdog.log 2>&1
    exec WatchDoge $RR_ROOT/watchdog > /dev/null 

end script
